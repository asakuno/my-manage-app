// Mocks generated by Mockito 5.4.5 from annotations
// in frontend/test/data/repository/subscription_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:frontend/data/local/subscription_local_data_source.dart' as _i2;
import 'package:frontend/domain/core/entity/subscription_status.dart' as _i4;
import 'package:frontend/domain/core/type/subscription_type.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SubscriptionLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSubscriptionLocalDataSource extends _i1.Mock
    implements _i2.SubscriptionLocalDataSource {
  MockSubscriptionLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get hasSubscriptionData => (super.noSuchMethod(
        Invocation.getter(#hasSubscriptionData),
        returnValue: false,
      ) as bool);

  @override
  int get purchaseHistoryCount => (super.noSuchMethod(
        Invocation.getter(#purchaseHistoryCount),
        returnValue: 0,
      ) as int);

  @override
  _i3.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> initializeForTest() => (super.noSuchMethod(
        Invocation.method(
          #initializeForTest,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveSubscriptionStatus(_i4.SubscriptionStatus? status) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSubscriptionStatus,
          [status],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.SubscriptionStatus?> getSubscriptionStatus() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSubscriptionStatus,
          [],
        ),
        returnValue: _i3.Future<_i4.SubscriptionStatus?>.value(),
      ) as _i3.Future<_i4.SubscriptionStatus?>);

  @override
  _i3.Future<void> savePurchaseHistory(List<_i4.SubscriptionStatus>? history) =>
      (super.noSuchMethod(
        Invocation.method(
          #savePurchaseHistory,
          [history],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.SubscriptionStatus>> getPurchaseHistory() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPurchaseHistory,
          [],
        ),
        returnValue: _i3.Future<List<_i4.SubscriptionStatus>>.value(
            <_i4.SubscriptionStatus>[]),
      ) as _i3.Future<List<_i4.SubscriptionStatus>>);

  @override
  _i3.Future<List<_i4.SubscriptionStatus>> getPurchaseHistoryByProductId(
          String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPurchaseHistoryByProductId,
          [productId],
        ),
        returnValue: _i3.Future<List<_i4.SubscriptionStatus>>.value(
            <_i4.SubscriptionStatus>[]),
      ) as _i3.Future<List<_i4.SubscriptionStatus>>);

  @override
  _i3.Future<_i4.SubscriptionStatus?> getLatestActiveSubscription() =>
      (super.noSuchMethod(
        Invocation.method(
          #getLatestActiveSubscription,
          [],
        ),
        returnValue: _i3.Future<_i4.SubscriptionStatus?>.value(),
      ) as _i3.Future<_i4.SubscriptionStatus?>);

  @override
  _i3.Future<bool> hasFeature(_i5.PremiumFeature? feature) =>
      (super.noSuchMethod(
        Invocation.method(
          #hasFeature,
          [feature],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> isSubscriptionExpired() => (super.noSuchMethod(
        Invocation.method(
          #isSubscriptionExpired,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> isInTrial() => (super.noSuchMethod(
        Invocation.method(
          #isInTrial,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<int> getDaysRemaining() => (super.noSuchMethod(
        Invocation.method(
          #getDaysRemaining,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<int> getMaxFriendsCount() => (super.noSuchMethod(
        Invocation.method(
          #getMaxFriendsCount,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<bool> shouldShowAds() => (super.noSuchMethod(
        Invocation.method(
          #shouldShowAds,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> resetToFreeSubscription() => (super.noSuchMethod(
        Invocation.method(
          #resetToFreeSubscription,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearPurchaseHistory() => (super.noSuchMethod(
        Invocation.method(
          #clearPurchaseHistory,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearAllSubscriptionData() => (super.noSuchMethod(
        Invocation.method(
          #clearAllSubscriptionData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<Map<String, dynamic>> getSubscriptionStatistics() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSubscriptionStatistics,
          [],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
