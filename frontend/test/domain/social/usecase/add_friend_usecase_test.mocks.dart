// Mocks generated by Mockito 5.4.5 from annotations
// in frontend/test/domain/social/usecase/add_friend_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:frontend/domain/core/entity/health_data.dart' as _i5;
import 'package:frontend/domain/core/entity/user_profile.dart' as _i4;
import 'package:frontend/domain/social/repository/social_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SocialRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSocialRepository extends _i1.Mock implements _i2.SocialRepository {
  MockSocialRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> addFriend(String? friendId) => (super.noSuchMethod(
        Invocation.method(
          #addFriend,
          [friendId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> removeFriend(String? friendId) => (super.noSuchMethod(
        Invocation.method(
          #removeFriend,
          [friendId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<_i4.UserProfile>> getFriends() => (super.noSuchMethod(
        Invocation.method(
          #getFriends,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.UserProfile>>.value(<_i4.UserProfile>[]),
      ) as _i3.Future<List<_i4.UserProfile>>);

  @override
  _i3.Future<bool> inviteFriend(
    String? email, {
    String? message,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #inviteFriend,
          [email],
          {#message: message},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> acceptFriendInvitation(String? invitationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #acceptFriendInvitation,
          [invitationId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> declineFriendInvitation(String? invitationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #declineFriendInvitation,
          [invitationId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<_i2.FriendInvitation>> getReceivedInvitations() =>
      (super.noSuchMethod(
        Invocation.method(
          #getReceivedInvitations,
          [],
        ),
        returnValue: _i3.Future<List<_i2.FriendInvitation>>.value(
            <_i2.FriendInvitation>[]),
      ) as _i3.Future<List<_i2.FriendInvitation>>);

  @override
  _i3.Future<List<_i2.FriendInvitation>> getSentInvitations() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSentInvitations,
          [],
        ),
        returnValue: _i3.Future<List<_i2.FriendInvitation>>.value(
            <_i2.FriendInvitation>[]),
      ) as _i3.Future<List<_i2.FriendInvitation>>);

  @override
  _i3.Future<List<_i2.RankingData>> getWeeklyRanking({
    required DateTime? startDate,
    required DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeeklyRanking,
          [],
          {
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue:
            _i3.Future<List<_i2.RankingData>>.value(<_i2.RankingData>[]),
      ) as _i3.Future<List<_i2.RankingData>>);

  @override
  _i3.Future<List<_i2.RankingData>> getMonthlyRanking({
    required int? year,
    required int? month,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMonthlyRanking,
          [],
          {
            #year: year,
            #month: month,
          },
        ),
        returnValue:
            _i3.Future<List<_i2.RankingData>>.value(<_i2.RankingData>[]),
      ) as _i3.Future<List<_i2.RankingData>>);

  @override
  _i3.Future<List<_i5.HealthData>> getFriendActivityData({
    required String? friendId,
    required DateTime? startDate,
    required DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFriendActivityData,
          [],
          {
            #friendId: friendId,
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue: _i3.Future<List<_i5.HealthData>>.value(<_i5.HealthData>[]),
      ) as _i3.Future<List<_i5.HealthData>>);

  @override
  _i3.Future<bool> shareActivityData({
    required List<String>? friendIds,
    required _i5.HealthData? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #shareActivityData,
          [],
          {
            #friendIds: friendIds,
            #data: data,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> updatePrivacyLevel(_i4.PrivacyLevel? level) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePrivacyLevel,
          [level],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<_i4.PrivacyLevel> getPrivacyLevel() => (super.noSuchMethod(
        Invocation.method(
          #getPrivacyLevel,
          [],
        ),
        returnValue:
            _i3.Future<_i4.PrivacyLevel>.value(_i4.PrivacyLevel.public),
      ) as _i3.Future<_i4.PrivacyLevel>);

  @override
  _i3.Future<List<_i4.UserProfile>> searchFriends(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchFriends,
          [query],
        ),
        returnValue:
            _i3.Future<List<_i4.UserProfile>>.value(<_i4.UserProfile>[]),
      ) as _i3.Future<List<_i4.UserProfile>>);

  @override
  _i3.Stream<List<_i4.UserProfile>> watchFriends() => (super.noSuchMethod(
        Invocation.method(
          #watchFriends,
          [],
        ),
        returnValue: _i3.Stream<List<_i4.UserProfile>>.empty(),
      ) as _i3.Stream<List<_i4.UserProfile>>);

  @override
  _i3.Stream<List<_i2.RankingData>> watchRanking(_i2.RankingPeriod? period) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchRanking,
          [period],
        ),
        returnValue: _i3.Stream<List<_i2.RankingData>>.empty(),
      ) as _i3.Stream<List<_i2.RankingData>>);

  @override
  _i3.Stream<List<_i2.FriendInvitation>> watchInvitations() =>
      (super.noSuchMethod(
        Invocation.method(
          #watchInvitations,
          [],
        ),
        returnValue: _i3.Stream<List<_i2.FriendInvitation>>.empty(),
      ) as _i3.Stream<List<_i2.FriendInvitation>>);

  @override
  _i3.Future<int> getMaxFriendsCount() => (super.noSuchMethod(
        Invocation.method(
          #getMaxFriendsCount,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<int> getCurrentFriendsCount() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentFriendsCount,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<List<_i4.UserProfile>> getBlockedFriends() => (super.noSuchMethod(
        Invocation.method(
          #getBlockedFriends,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.UserProfile>>.value(<_i4.UserProfile>[]),
      ) as _i3.Future<List<_i4.UserProfile>>);

  @override
  _i3.Future<bool> blockFriend(String? friendId) => (super.noSuchMethod(
        Invocation.method(
          #blockFriend,
          [friendId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> unblockFriend(String? friendId) => (super.noSuchMethod(
        Invocation.method(
          #unblockFriend,
          [friendId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
