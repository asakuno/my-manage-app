// Mocks generated by Mockito 5.4.5 from annotations
// in frontend/test/presentation/provider/social_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:frontend/data/local/user_preferences_data_source.dart' as _i9;
import 'package:frontend/data/repository/social_repository_impl.dart' as _i8;
import 'package:frontend/domain/core/entity/health_data.dart' as _i7;
import 'package:frontend/domain/core/entity/user_profile.dart' as _i4;
import 'package:frontend/domain/social/repository/social_repository.dart'
    as _i5;
import 'package:frontend/domain/social/usecase/add_friend_usecase.dart' as _i2;
import 'package:frontend/domain/social/usecase/get_friends_ranking_usecase.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AddFriendUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddFriendUseCase extends _i1.Mock implements _i2.AddFriendUseCase {
  MockAddFriendUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> call(String? friendId) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [friendId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> inviteFriend(
    String? email, {
    String? message,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #inviteFriend,
          [email],
          {#message: message},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> acceptInvitation(String? invitationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #acceptInvitation,
          [invitationId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> declineInvitation(String? invitationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #declineInvitation,
          [invitationId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> removeFriend(String? friendId) => (super.noSuchMethod(
        Invocation.method(
          #removeFriend,
          [friendId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<_i4.UserProfile>> getFriends() => (super.noSuchMethod(
        Invocation.method(
          #getFriends,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.UserProfile>>.value(<_i4.UserProfile>[]),
      ) as _i3.Future<List<_i4.UserProfile>>);

  @override
  _i3.Future<List<_i5.FriendInvitation>> getReceivedInvitations() =>
      (super.noSuchMethod(
        Invocation.method(
          #getReceivedInvitations,
          [],
        ),
        returnValue: _i3.Future<List<_i5.FriendInvitation>>.value(
            <_i5.FriendInvitation>[]),
      ) as _i3.Future<List<_i5.FriendInvitation>>);

  @override
  _i3.Future<List<_i5.FriendInvitation>> getSentInvitations() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSentInvitations,
          [],
        ),
        returnValue: _i3.Future<List<_i5.FriendInvitation>>.value(
            <_i5.FriendInvitation>[]),
      ) as _i3.Future<List<_i5.FriendInvitation>>);

  @override
  _i3.Future<List<_i4.UserProfile>> searchFriends(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchFriends,
          [query],
        ),
        returnValue:
            _i3.Future<List<_i4.UserProfile>>.value(<_i4.UserProfile>[]),
      ) as _i3.Future<List<_i4.UserProfile>>);

  @override
  _i3.Stream<List<_i4.UserProfile>> watchFriends() => (super.noSuchMethod(
        Invocation.method(
          #watchFriends,
          [],
        ),
        returnValue: _i3.Stream<List<_i4.UserProfile>>.empty(),
      ) as _i3.Stream<List<_i4.UserProfile>>);

  @override
  _i3.Stream<List<_i5.FriendInvitation>> watchInvitations() =>
      (super.noSuchMethod(
        Invocation.method(
          #watchInvitations,
          [],
        ),
        returnValue: _i3.Stream<List<_i5.FriendInvitation>>.empty(),
      ) as _i3.Stream<List<_i5.FriendInvitation>>);

  @override
  _i3.Future<int> getCurrentFriendsCount() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentFriendsCount,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<int> getMaxFriendsCount() => (super.noSuchMethod(
        Invocation.method(
          #getMaxFriendsCount,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<bool> canAddMoreFriends() => (super.noSuchMethod(
        Invocation.method(
          #canAddMoreFriends,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<Map<String, dynamic>> getFriendsStatistics() =>
      (super.noSuchMethod(
        Invocation.method(
          #getFriendsStatistics,
          [],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);
}

/// A class which mocks [GetFriendsRankingUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetFriendsRankingUseCase extends _i1.Mock
    implements _i6.GetFriendsRankingUseCase {
  MockGetFriendsRankingUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i5.RankingData>> getWeeklyRanking({
    required DateTime? startDate,
    required DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeeklyRanking,
          [],
          {
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue:
            _i3.Future<List<_i5.RankingData>>.value(<_i5.RankingData>[]),
      ) as _i3.Future<List<_i5.RankingData>>);

  @override
  _i3.Future<List<_i5.RankingData>> getMonthlyRanking({
    required int? year,
    required int? month,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMonthlyRanking,
          [],
          {
            #year: year,
            #month: month,
          },
        ),
        returnValue:
            _i3.Future<List<_i5.RankingData>>.value(<_i5.RankingData>[]),
      ) as _i3.Future<List<_i5.RankingData>>);

  @override
  _i3.Future<List<_i5.RankingData>> getCurrentWeekRanking() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentWeekRanking,
          [],
        ),
        returnValue:
            _i3.Future<List<_i5.RankingData>>.value(<_i5.RankingData>[]),
      ) as _i3.Future<List<_i5.RankingData>>);

  @override
  _i3.Future<List<_i5.RankingData>> getCurrentMonthRanking() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentMonthRanking,
          [],
        ),
        returnValue:
            _i3.Future<List<_i5.RankingData>>.value(<_i5.RankingData>[]),
      ) as _i3.Future<List<_i5.RankingData>>);

  @override
  _i3.Future<List<_i7.HealthData>> getFriendActivityData({
    required String? friendId,
    required DateTime? startDate,
    required DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFriendActivityData,
          [],
          {
            #friendId: friendId,
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue: _i3.Future<List<_i7.HealthData>>.value(<_i7.HealthData>[]),
      ) as _i3.Future<List<_i7.HealthData>>);

  @override
  _i3.Stream<List<_i5.RankingData>> watchRanking(_i5.RankingPeriod? period) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchRanking,
          [period],
        ),
        returnValue: _i3.Stream<List<_i5.RankingData>>.empty(),
      ) as _i3.Stream<List<_i5.RankingData>>);

  @override
  int getCurrentUserRank(List<_i5.RankingData>? ranking) => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUserRank,
          [ranking],
        ),
        returnValue: 0,
      ) as int);

  @override
  Map<String, dynamic> getRankingStatistics(List<_i5.RankingData>? ranking) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRankingStatistics,
          [ranking],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i3.Future<Map<String, dynamic>> compareWithFriend({
    required String? friendId,
    required _i5.RankingPeriod? period,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #compareWithFriend,
          [],
          {
            #friendId: friendId,
            #period: period,
          },
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);
}

/// A class which mocks [SocialRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockSocialRepositoryImpl extends _i1.Mock
    implements _i8.SocialRepositoryImpl {
  MockSocialRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> addFriend(String? friendId) => (super.noSuchMethod(
        Invocation.method(
          #addFriend,
          [friendId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> removeFriend(String? friendId) => (super.noSuchMethod(
        Invocation.method(
          #removeFriend,
          [friendId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<_i4.UserProfile>> getFriends() => (super.noSuchMethod(
        Invocation.method(
          #getFriends,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.UserProfile>>.value(<_i4.UserProfile>[]),
      ) as _i3.Future<List<_i4.UserProfile>>);

  @override
  _i3.Future<bool> inviteFriend(
    String? email, {
    String? message,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #inviteFriend,
          [email],
          {#message: message},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> acceptFriendInvitation(String? invitationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #acceptFriendInvitation,
          [invitationId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> declineFriendInvitation(String? invitationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #declineFriendInvitation,
          [invitationId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<_i5.FriendInvitation>> getReceivedInvitations() =>
      (super.noSuchMethod(
        Invocation.method(
          #getReceivedInvitations,
          [],
        ),
        returnValue: _i3.Future<List<_i5.FriendInvitation>>.value(
            <_i5.FriendInvitation>[]),
      ) as _i3.Future<List<_i5.FriendInvitation>>);

  @override
  _i3.Future<List<_i5.FriendInvitation>> getSentInvitations() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSentInvitations,
          [],
        ),
        returnValue: _i3.Future<List<_i5.FriendInvitation>>.value(
            <_i5.FriendInvitation>[]),
      ) as _i3.Future<List<_i5.FriendInvitation>>);

  @override
  _i3.Future<List<_i5.RankingData>> getWeeklyRanking({
    required DateTime? startDate,
    required DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeeklyRanking,
          [],
          {
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue:
            _i3.Future<List<_i5.RankingData>>.value(<_i5.RankingData>[]),
      ) as _i3.Future<List<_i5.RankingData>>);

  @override
  _i3.Future<List<_i5.RankingData>> getMonthlyRanking({
    required int? year,
    required int? month,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMonthlyRanking,
          [],
          {
            #year: year,
            #month: month,
          },
        ),
        returnValue:
            _i3.Future<List<_i5.RankingData>>.value(<_i5.RankingData>[]),
      ) as _i3.Future<List<_i5.RankingData>>);

  @override
  _i3.Future<List<_i7.HealthData>> getFriendActivityData({
    required String? friendId,
    required DateTime? startDate,
    required DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFriendActivityData,
          [],
          {
            #friendId: friendId,
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue: _i3.Future<List<_i7.HealthData>>.value(<_i7.HealthData>[]),
      ) as _i3.Future<List<_i7.HealthData>>);

  @override
  _i3.Future<bool> shareActivityData({
    required List<String>? friendIds,
    required _i7.HealthData? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #shareActivityData,
          [],
          {
            #friendIds: friendIds,
            #data: data,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> updatePrivacyLevel(_i4.PrivacyLevel? level) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePrivacyLevel,
          [level],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<_i4.PrivacyLevel> getPrivacyLevel() => (super.noSuchMethod(
        Invocation.method(
          #getPrivacyLevel,
          [],
        ),
        returnValue:
            _i3.Future<_i4.PrivacyLevel>.value(_i4.PrivacyLevel.public),
      ) as _i3.Future<_i4.PrivacyLevel>);

  @override
  _i3.Future<List<_i4.UserProfile>> searchFriends(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchFriends,
          [query],
        ),
        returnValue:
            _i3.Future<List<_i4.UserProfile>>.value(<_i4.UserProfile>[]),
      ) as _i3.Future<List<_i4.UserProfile>>);

  @override
  _i3.Stream<List<_i4.UserProfile>> watchFriends() => (super.noSuchMethod(
        Invocation.method(
          #watchFriends,
          [],
        ),
        returnValue: _i3.Stream<List<_i4.UserProfile>>.empty(),
      ) as _i3.Stream<List<_i4.UserProfile>>);

  @override
  _i3.Stream<List<_i5.RankingData>> watchRanking(_i5.RankingPeriod? period) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchRanking,
          [period],
        ),
        returnValue: _i3.Stream<List<_i5.RankingData>>.empty(),
      ) as _i3.Stream<List<_i5.RankingData>>);

  @override
  _i3.Stream<List<_i5.FriendInvitation>> watchInvitations() =>
      (super.noSuchMethod(
        Invocation.method(
          #watchInvitations,
          [],
        ),
        returnValue: _i3.Stream<List<_i5.FriendInvitation>>.empty(),
      ) as _i3.Stream<List<_i5.FriendInvitation>>);

  @override
  _i3.Future<int> getMaxFriendsCount() => (super.noSuchMethod(
        Invocation.method(
          #getMaxFriendsCount,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<int> getCurrentFriendsCount() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentFriendsCount,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<List<_i4.UserProfile>> getBlockedFriends() => (super.noSuchMethod(
        Invocation.method(
          #getBlockedFriends,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.UserProfile>>.value(<_i4.UserProfile>[]),
      ) as _i3.Future<List<_i4.UserProfile>>);

  @override
  _i3.Future<bool> blockFriend(String? friendId) => (super.noSuchMethod(
        Invocation.method(
          #blockFriend,
          [friendId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> unblockFriend(String? friendId) => (super.noSuchMethod(
        Invocation.method(
          #unblockFriend,
          [friendId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserPreferencesDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserPreferencesDataSource extends _i1.Mock
    implements _i9.UserPreferencesDataSource {
  MockUserPreferencesDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get hasUserProfile => (super.noSuchMethod(
        Invocation.getter(#hasUserProfile),
        returnValue: false,
      ) as bool);

  @override
  int get settingsCount => (super.noSuchMethod(
        Invocation.getter(#settingsCount),
        returnValue: 0,
      ) as int);

  @override
  _i3.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> initializeForTest() => (super.noSuchMethod(
        Invocation.method(
          #initializeForTest,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveUserProfile(_i4.UserProfile? profile) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserProfile,
          [profile],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.UserProfile?> getUserProfile() => (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [],
        ),
        returnValue: _i3.Future<_i4.UserProfile?>.value(),
      ) as _i3.Future<_i4.UserProfile?>);

  @override
  _i3.Future<void> saveDailyStepGoal(int? goal) => (super.noSuchMethod(
        Invocation.method(
          #saveDailyStepGoal,
          [goal],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<int> getDailyStepGoal() => (super.noSuchMethod(
        Invocation.method(
          #getDailyStepGoal,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<void> saveNotificationSettings(bool? enabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveNotificationSettings,
          [enabled],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> getNotificationSettings() => (super.noSuchMethod(
        Invocation.method(
          #getNotificationSettings,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> savePrivacyLevel(_i4.PrivacyLevel? level) =>
      (super.noSuchMethod(
        Invocation.method(
          #savePrivacyLevel,
          [level],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.PrivacyLevel> getPrivacyLevel() => (super.noSuchMethod(
        Invocation.method(
          #getPrivacyLevel,
          [],
        ),
        returnValue:
            _i3.Future<_i4.PrivacyLevel>.value(_i4.PrivacyLevel.public),
      ) as _i3.Future<_i4.PrivacyLevel>);

  @override
  _i3.Future<void> saveLanguage(String? language) => (super.noSuchMethod(
        Invocation.method(
          #saveLanguage,
          [language],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String> getLanguage() => (super.noSuchMethod(
        Invocation.method(
          #getLanguage,
          [],
        ),
        returnValue: _i3.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #getLanguage,
            [],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<void> saveTimezone(String? timezone) => (super.noSuchMethod(
        Invocation.method(
          #saveTimezone,
          [timezone],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String> getTimezone() => (super.noSuchMethod(
        Invocation.method(
          #getTimezone,
          [],
        ),
        returnValue: _i3.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #getTimezone,
            [],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<void> saveThemeMode(String? themeMode) => (super.noSuchMethod(
        Invocation.method(
          #saveThemeMode,
          [themeMode],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String> getThemeMode() => (super.noSuchMethod(
        Invocation.method(
          #getThemeMode,
          [],
        ),
        returnValue: _i3.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #getThemeMode,
            [],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<void> setFirstLaunch(bool? isFirstLaunch) => (super.noSuchMethod(
        Invocation.method(
          #setFirstLaunch,
          [isFirstLaunch],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> isFirstLaunch() => (super.noSuchMethod(
        Invocation.method(
          #isFirstLaunch,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> setOnboardingCompleted(bool? completed) =>
      (super.noSuchMethod(
        Invocation.method(
          #setOnboardingCompleted,
          [completed],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> isOnboardingCompleted() => (super.noSuchMethod(
        Invocation.method(
          #isOnboardingCompleted,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> saveHealthPermissionGranted(bool? granted) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveHealthPermissionGranted,
          [granted],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> isHealthPermissionGranted() => (super.noSuchMethod(
        Invocation.method(
          #isHealthPermissionGranted,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> saveLastSyncTime(DateTime? syncTime) => (super.noSuchMethod(
        Invocation.method(
          #saveLastSyncTime,
          [syncTime],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<DateTime?> getLastSyncTime() => (super.noSuchMethod(
        Invocation.method(
          #getLastSyncTime,
          [],
        ),
        returnValue: _i3.Future<DateTime?>.value(),
      ) as _i3.Future<DateTime?>);

  @override
  _i3.Future<void> saveAppSettings(Map<String, dynamic>? settings) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveAppSettings,
          [settings],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<Map<String, dynamic>> getAppSettings() => (super.noSuchMethod(
        Invocation.method(
          #getAppSettings,
          [],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<void> saveSetting(
    String? key,
    dynamic value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSetting,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<T?> getSetting<T>(
    String? key, {
    T? defaultValue,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSetting,
          [key],
          {#defaultValue: defaultValue},
        ),
        returnValue: _i3.Future<T?>.value(),
      ) as _i3.Future<T?>);

  @override
  bool hasSetting(String? key) => (super.noSuchMethod(
        Invocation.method(
          #hasSetting,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<void> deleteSetting(String? key) => (super.noSuchMethod(
        Invocation.method(
          #deleteSetting,
          [key],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> resetAllSettings() => (super.noSuchMethod(
        Invocation.method(
          #resetAllSettings,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteUserProfile() => (super.noSuchMethod(
        Invocation.method(
          #deleteUserProfile,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  Map<String, dynamic> getSettingsStatistics() => (super.noSuchMethod(
        Invocation.method(
          #getSettingsStatistics,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i3.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
